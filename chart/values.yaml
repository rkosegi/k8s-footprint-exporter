# Copyright 2024 Richard Kosegi
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
replicaCount: 1 # Number of pod replicas

image:
  repository: ghcr.io/rkosegi/k8s-footprint-exporter # Image registry+repository
  pullPolicy: IfNotPresent # Image pull policy
  tag: "" # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: [] # List of pull secrets
nameOverride: "" # Override release name
fullnameOverride: "" # Override full name

serviceAccount:
  create: true # Specifies whether a service account should be created
  annotations: {} # Annotations to add to the service account
  name: "" # The name of the service account to use. If not set and create is true, a name is generated using the fullname template

serviceMonitor:
  enabled: true # Flag to enable ServiceMonitor resource
  scrape_config: # scrape configuration
    - port: metrics
      interval: 30s

podAnnotations: {} # Additional annotations to put on pods

podSecurityContext: {} # Pod security context
  # fsGroup: 2000

metrics: {} # Metrics definition
#  rsname:
#    apiVersion: v1
#    kinds:
#      configmaps:
#        nameLabel: true
#        includeOnly: kube.*
#        size: true
#        count: true
#      secrets:
#        size: false
#        count: false
rbac:
  enabled: true # Flag to enable RBAC resources
  fromMetrics: true # Generate RBAC rules from metrics. Only generates namespaced rules
  extraRules: [] # Additional rules to append to rule list
  # needed for non-namespaced resources, such as nodes
  clusterScoped:
    enabled: false # Flag to enable ClusterRole/ClusterRoleBinding
    rules: [] # rules for non-namespaced resources

securityContext: {} # container-specific security context
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP # service type
  port: 80 # service port

resources: {} # Resources
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {} # Node selector
tolerations: [] # Tolerations
affinity: {} # Node affinity
